# NOTE: source bashrc_private before this

OS=$(uname)

# Determine OS platform
UNAME=$(uname | tr "[:upper:]" "[:lower:]")
# If Linux, try to determine specific distribution
if [ "$UNAME" == "linux" ]; then
    # If available, use LSB to identify distribution
    if [ -f /etc/lsb-release -o -d /etc/lsb-release.d ]; then
        export DISTRO=$(lsb_release -i | cut -d: -f2 | sed s/'^\t'//)
    # Otherwise, use release info file
    else
        export DISTRO=$(ls -d /etc/[A-Za-z]*[_-][rv]e[lr]* | grep -v "lsb" | cut -d'/' -f3 | cut -d'-' -f1 | cut -d'_' -f1)
    fi
fi
# For everything else (or if above failed), just use generic identifier
[ "$DISTRO" == "" ] && export DISTRO=$UNAME
unset UNAME

alias oc=octave
alias pp='ps -eLFw'
alias p='psg'
alias ppp='ps axwwwo cmd,pid,ppid,pgrp,session,pcpu,state,cutime,cstime,utime,vsize,tty,start_time,uid,priority'
alias g='grep -i --color'
alias gg='grep -i --color=always'
alias scr='screen'
alias h='history | tail -100'
alias vf='vim $(fzf)'

LS_COLOR_ARG="--color"
if [ "$OS" = "Darwin" ]; then
  LS_COLOR_ARG="-G"
  export LSCOLORS=gxfxcxdxbxegedabagacad
else
    LS_COLORS='di=1;35'
    export LS_COLORS
fi
alias ll="ls -lF $LS_COLOR_ARG"
alias ltr="ls -lFtr $LS_COLOR_ARG"
alias ls="ls -F $LS_COLOR_ARG"

alias ms='sudo -u mysql rsync -av --delete'

alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'

alias sf="awk -F: '{print \$1}' | sort -u | xargs"

alias vnc='vncserver -geometry 1440x900 -depth 24'
alias vnc2='vncserver -geometry 1920x1200 -depth 24'

# For virtualenv
alias cdve='cd $(echo $PATH | ruby -ne '"'"'puts split(":")[0].split("/")[0..-2].join("/")'"'"')'
alias cdvesrc='cd $(echo $PATH | ruby -ne '"'"'puts split(":")[0].split("/")[0..-2].join("/")'"'"')/src'
alias cdvesite='cd $(echo $PATH | ruby -ne '"'"'puts split(":")[0].split("/")[0..-2].join("/")'"'"')/lib/python2.5/site-packages/'

alias pc='pycscope.py -R .'
alias uc='export PATH="/usr/lib/ccache:$PATH"'

# Provide tab completion for sqlite3.
[ $(which rlwrap) ] && alias sqlite3='rlwrap -a -r sqlite3'

export PAGER='less'
export LESS=-iR

export PATH="$PATH:$HOME/bin:$HOME/.vim/bundle/gj/bin"

# Define your prefered "hostname" in .bashrc. Otherwise use the real hostname.
if [ "$host" = "" ]; then
    host=$(hostname)
fi
export PS1="[\u@$host \w ]\n$ "

# Use the following PS1 if you've installed hg-prompt and enable it in your ~/.hgrc
# Show mercurial branch
# hg_ps1() {
#     hg prompt "{branch}:{node|short}:{status}" 2> /dev/null
# }
# export PS1='[\u@$host \w ($(hg_ps1))]\n$ '


# colorful man page
export PAGER="`which less` -s"
#export BROWSER="$PAGER"
export LESS_TERMCAP_mb=$'\E[0;32m'
export LESS_TERMCAP_md=$'\E[0;32m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[0;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[0;33m'

stty erase ^?

# turn on bash completion for sudo
complete -cf sudo

# shortcut for cd
if [ "$OS" = "Darwin" ]; then
  source /opt/local/etc/profile.d/cdargs-bash.sh
elif [ "$DISTRO" = "Ubuntu" ]; then
  source /usr/share/doc/cdargs/examples/cdargs-bash.sh
fi


#-------------------------------------------------------------------------------
# VI
#-------------------------------------------------------------------------------
export EDITOR='vim'
set -o vi
bind -m vi-insert "C-l":clear-screen

function vi() {
  if [ $# -ne 1 ]; then
    vim -X $@
  else
    r=$(echo $1 | grep ":[0-9]\+:[0-9]\+:")
    if [ "$?" -eq 0 ]; then
      file=$(echo $1 | sed 's/:\([0-9]\+\):\([0-9]\+\):$/ +\1/')
    else
      file=$(echo $1 | sed 's/:\([0-9]\+\)$/ +\1/')
    fi
    vim -X $file
  fi
}


#-------------------------------------------------------------------------------
# Python
#-------------------------------------------------------------------------------

function gp() {
    if [ "$1" = "-p" ]; then
        shift
        find -name "*.py" | perl -ne 'print $_ if !($_ =~ /.*_test\.py/)'  | xargs grep -i --color $1
    elif [ "$1" = "-t" ]; then
        shift
        find -name "*.py" | perl -ne 'print $_ if $_ =~ /.*_test\.py/'  | xargs grep -i --color $1
    else
        find -name "*.py" | xargs grep -i --color "$1"
    fi
}

alias no='nosetests --processes=4'

#-------------------------------------------------------------------------------
# pip
#-------------------------------------------------------------------------------

#export PIP_REQUIRE_VIRTUALENV=true
#source ~/.bash_completions/pip

#-------------------------------------------------------------------------------
# Django
#-------------------------------------------------------------------------------

#source ~/.bash_completions/django_bash_completion

#-------------------------------------------------------------------------------
# Mercurial
#-------------------------------------------------------------------------------

alias hgst='hg st -a -r -d -m'
alias hlog='hg log -G | less'
alias hlogv='hg log -G -v | less'

export HGMERGE=kdiff3
export HGENCODING=utf-8

# Show repository name in promp. Not a good solution.
function set_hg_rep() {
    hg_rep=$(pwd | awk -F/ '{ print $5 }')
    if [ "$hg_rep" != "" ]; then
        hg_rep="(\033[1;31m$(pwd | awk -F/ '{ print $5 }')\033[m)"
    fi
    export PS1="[\u@$host \w $hg_rep]\n$ "
}

function my_cd() {
    \cd $1 && set_hg_rep
}

#alias cd=my_cd

#-------------------------------------------------------------------------------
# Fabric
#-------------------------------------------------------------------------------
source ~/.bash_completions/fab_completion.bash

#-------------------------------------------------------------------------------
# Other
#-------------------------------------------------------------------------------

# Because Django also set the completion function of python,
# place this line after Django to override it.
source ~/.bash_completions/python_module

#-------------------------------------------------------------------------------
# Trace code
#-------------------------------------------------------------------------------

function see() {
    vi `which $1`
}

complete -c command see

ulimit -c unlimited

#-------------------------------------------------------------------------------
# Git
#-------------------------------------------------------------------------------
alias gl='git log --graph --stat'
alias gs='git status'
alias gsu='git status -uno'
alias gd='git diff'
alias gs='git status'
alias gdc='git diff --cached'
alias gc='git commit'
alias ga='git add'
source ~/.bash_completions/git-completion.bash
